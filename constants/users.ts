import { User } from '@prisma/client';

// IMPORTANT: Remember to hash passwords before seeding the database
// You can use a library like bcrypt for this
// For example: hashedPassword: await bcrypt.hash('password123', 12)

export const mockUsers: (Omit<User, 'createdAt' | 'updatedAt' | 'emailVerified'> & { createdAt: string; updatedAt: string; emailVerified: string | null })[] = [
  {
    id: '6532d8a6e3a9a9e42d35a4c5',
    name: 'Alice Smith',
    email: 'alice@example.com',
    image: 'https://placehold.co/100x100/4F46E5/FFFFFF?text=AS&font=roboto',
    hashedPassword: 'sunnyDay42!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c1', '6532d8bde3a9a9e42d35a4c3', '6532d8bde3a9a9e42d35a4c7', '6532d8bde3a9a9e42d35a4c9'],
    createdAt: '2023-01-02T12:00:00.000Z',
    updatedAt: '2023-01-02T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4c6',
    name: 'Bob Johnson',
    email: 'bob@example.com',
    image: 'https://placehold.co/100x100/F97316/FFFFFF?text=BJ&font=roboto',
    hashedPassword: 'cityLife88!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c0', '6532d8bde3a9a9e42d35a4c4', '6532d8bde3a9a9e42d35a4cd'],
    createdAt: '2023-01-03T12:00:00.000Z',
    updatedAt: '2023-01-03T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4c7',
    name: 'Carol White',
    email: 'carol@example.com',
    image: 'https://placehold.co/100x100/10B981/FFFFFF?text=CW&font=roboto',
    hashedPassword: 'mountainView7!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c0', '6532d8bde3a9a9e42d35a4c2', '6532d8bde3a9a9e42d35a4c6', '6532d8bde3a9a9e42d35a4c8', '6532d8bde3a9a9e42d35a4cc'],
    createdAt: '2023-01-04T12:00:00.000Z',
    updatedAt: '2023-01-04T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4c9',
    name: 'David Green',
    email: 'david@example.com',
    image: 'https://placehold.co/100x100/0EA5E9/FFFFFF?text=DG&font=roboto',
    hashedPassword: 'islandBreeze9!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c2', '6532d8bde3a9a9e42d35a4c4', '6532d8bde3a9a9e42d35a4c5', '6532d8bde3a9a9e42d35a4c7'],
    createdAt: '2023-01-05T12:00:00.000Z',
    updatedAt: '2023-01-05T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4ca',
    name: 'Eve Black',
    email: 'eve@example.com',
    image: 'https://placehold.co/100x100/F43F5E/FFFFFF?text=EB&font=roboto',
    hashedPassword: 'castleDream5!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c0', '6532d8bde3a9a9e42d35a4c3', '6532d8bde3a9a9e42d35a4c6', '6532d8bde3a9a9e42d35a4cb', '6532d8bde3a9a9e42d35a4cd'],
    createdAt: '2023-01-06T12:00:00.000Z',
    updatedAt: '2023-01-06T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4cb',
    name: 'Frank Turner',
    email: 'frank@example.com',
    image: 'https://placehold.co/100x100/8B5CF6/FFFFFF?text=FT&font=roboto',
    hashedPassword: 'windmill123!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c8', '6532d8bde3a9a9e42d35a4cc', '6532d8bde3a9a9e42d35a4ce'],
    createdAt: '2023-01-07T12:00:00.000Z',
    updatedAt: '2023-01-07T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4cc',
    name: 'Grace Miller',
    email: 'grace@example.com',
    image: 'https://placehold.co/100x100/FACC15/000000?text=GM&font=roboto',
    hashedPassword: 'modernLife22!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c1', '6532d8bde3a9a9e42d35a4c4', '6532d8bde3a9a9e42d35a4c9', '6532d8bde3a9a9e42d35a4cc', '6532d8bde3a9a9e42d35a4ce'],
    createdAt: '2023-01-08T12:00:00.000Z',
    updatedAt: '2023-01-08T12:00:00.000Z',
    emailVerified: null,
  },
  {
    id: '6532d8a6e3a9a9e42d35a4cd',
    name: 'Henry Adams',
    email: 'henry@example.com',
    image: 'https://placehold.co/100x100/14B8A6/FFFFFF?text=HA&font=roboto',
    hashedPassword: 'lakeside77!',
    favoriteIds: ['6532d8bde3a9a9e42d35a4c5', '6532d8bde3a9a9e42d35a4c7', '6532d8bde3a9a9e42d35a4c8', '6532d8bde3a9a9e42d35a4ca'],
    createdAt: '2023-01-09T12:00:00.000Z',
    updatedAt: '2023-01-09T12:00:00.000Z',
    emailVerified: null,
  },
];
